plugins {
	id 'java'
	id 'war'
	id 'org.springframework.boot' version '3.3.5'
	id 'io.spring.dependency-management' version '1.1.6'
	id 'org.openapi.generator' version '7.9.0'
}

group = 'com.nibelsoft'
version = '0.0.1-SNAPSHOT'

java {
	toolchain {
		languageVersion = JavaLanguageVersion.of(23)
	}
}

configurations {
	compileOnly {
		extendsFrom annotationProcessor
	}
}

repositories {
	mavenCentral()
}

dependencies {
	implementation("org.springdoc:springdoc-openapi-starter-webmvc-ui:2.6.0")
	implementation 'org.springframework.boot:spring-boot-starter-data-jpa'
	implementation 'org.springframework.boot:spring-boot-starter-web'
	implementation 'org.springframework.security:spring-security-core'
	implementation 'org.springframework.security:spring-security-crypto'
	implementation 'org.springframework.boot:spring-boot-starter-security'
	implementation 'io.jsonwebtoken:jjwt-api:0.12.6'
	testImplementation 'org.springframework.security:spring-security-test'
	compileOnly 'org.projectlombok:lombok'
	runtimeOnly 'org.postgresql:postgresql'
	runtimeOnly 'io.jsonwebtoken:jjwt-impl:0.12.6'
	runtimeOnly 'io.jsonwebtoken:jjwt-jackson:0.12.6'
	annotationProcessor 'org.projectlombok:lombok'
	providedRuntime 'org.springframework.boot:spring-boot-starter-tomcat'
	testImplementation 'org.springframework.boot:spring-boot-starter-test'
	testRuntimeOnly 'org.junit.platform:junit-platform-launcher'
}

tasks.named('test') {
	useJUnitPlatform()
}

openApiGenerate {
	inputSpec = "$projectDir/src/main/resources/openapi.yaml"
	outputDir = "$projectDir/build/generated"
	generatorName = "spring"
	apiPackage = "com.nibelsoft.backend"
	modelPackage = "com.nibelsoft.backend.model"
	configOptions = [
			dateLibrary: "java8",
			useTags: "true",
			useBeanValidation: "true",
			useOptional: "true",
			useSpringDataAnnotations: "true",
			useSpringDataRest: "true",
			useSpringWeb: "true",
			useSpringFox: "true",
			useSpringConfig: "true",
			useSpringBoot: "true",
			useSpringBootStarter: "true",
			useSpringBootStarterWeb: "true",
			useSpringBootStarterTest: "true",
			useSpringBootStarterDataJpa: "true",
			useSpringBootStarterDataRestH2: "true"
	]
}